/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMentorshipNFT,
  IMentorshipNFTInterface,
} from "../../../../src/contracts/MentorshipContract.sol/IMentorshipNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "student",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "sessionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mentor",
        type: "address",
      },
    ],
    name: "mintAchievement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMentorshipNFT__factory {
  static readonly abi = _abi;
  static createInterface(): IMentorshipNFTInterface {
    return new Interface(_abi) as IMentorshipNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMentorshipNFT {
    return new Contract(address, _abi, runner) as unknown as IMentorshipNFT;
  }
}
